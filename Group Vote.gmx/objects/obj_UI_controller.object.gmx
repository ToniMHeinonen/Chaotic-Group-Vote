<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Instructions
/*
ALt + C - Turn controller on and off
M - Change controller mode
Arrows = Adjust x and y position

Hold control - Adjust amount to change to 10
Hold shift - Adjust amount to change to 100
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables
global.UI_x = 500;
global.UI_y = 500;
global.UI_xOffset = 0;
global.UI_yOffset = 0;

showController = false;
controlValueX[0] = global.UI_x;
controlValueX[1] = global.UI_xOffset;
controlValueY[0] = global.UI_y;
controlValueY[1] = global.UI_yOffset;
controlMode[0] = "Position";
controlMode[1] = "Offset";
modeNum = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// UI controller
// Switch controller on and off
if (keyboard_check_pressed(ord('C')) &amp;&amp; keyboard_check(vk_alt))
    showController = !showController;
    
if (!showController) exit;

// Change controller mode
if (keyboard_check_pressed(ord('M')) &amp;&amp; keyboard_check(vk_alt)) {
    modeNum ++;
    if (modeNum+1 &gt; array_length_1d(controlMode)) modeNum = 0;
    control = controlMode[modeNum];
}

var amount = 1;
if (keyboard_check(vk_control)) amount = 10;
else if (keyboard_check(vk_shift)) amount = 100;

if (keyboard_check_pressed(vk_right))
    controlValueX[modeNum] += amount;
else if (keyboard_check_pressed(vk_left))
    controlValueX[modeNum] -= amount;
else if (keyboard_check_pressed(vk_down))
    controlValueY[modeNum] += amount;
else if (keyboard_check_pressed(vk_up))
    controlValueY[modeNum] -= amount;

global.UI_x = controlValueX[0];
global.UI_xOffset = controlValueX[1];
global.UI_y = controlValueY[0];
global.UI_yOffset = controlValueY[1];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw controller values
if (!showController) exit;

draw_set_font(fnt_menu);
draw_set_color(global.text_color);

var xx = room_width - 250;
var yy = room_height - 200;
var yOffset = 70;
draw_text(xx, yy - yOffset*2, "M - Change mode");
draw_text(xx, yy - yOffset, "Control mode: " + controlMode[modeNum]);
draw_text(xx, yy, "X: " + string(controlValueX[modeNum]));
draw_text(xx, yy + yOffset, "Y: " + string(controlValueY[modeNum]));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
