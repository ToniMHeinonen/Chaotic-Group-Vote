<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///copy items and profiles
scr_load_items();
scr_skip_ignored_items();
scr_save_vote_items();

scr_load_profiles();
scr_save_vote_profiles();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init
b_left = room_width/3;
b_top = room_height/3;
b_right = room_width/3*2;
b_bottom = room_height/3*2;
b_xcenter = room_width/2;
b_ycenter = room_height/2;

global.voter_amount = 1;
global.vote_points = 0;
global.voter = 1;
state = "start";
next_step = false;
global.vote_next_x = 300;
global.vote_next_y = 50;
global.vote_prev_x = 100;
global.vote_prev_y = 50;

scr_reset_vote_points();

//Create start buttons
var pro = instance_create(b_xcenter+30,b_ycenter,obj_number_button);
pro.title = "+";
pro.creator = "Vote";
var pro = instance_create(b_xcenter-30,b_ycenter,obj_number_button);
pro.title = "-";
pro.creator = "Vote";
instance_create(global.vote_next_x,global.vote_next_y,obj_vote_next_step);

//Create exit button
instance_create(room_width-100,50,obj_vote_exit);

margin = 50;
text = "How many voters?";
keyboard_string = "";
invalid_name = false;
invalid_text = noone;
blink = false;
alarm[0] = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy ds lists
scr_destroy_items();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// blinking
blink = !blink;
alarm[0] = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///No blanks and escape invalid name
if (keyboard_string == " ") then keyboard_string = "";

if (keyboard_check_released(vk_enter)) or (keyboard_check_released(vk_escape)) {
    if (invalid_name) {
        invalid_name = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw start
if (state == "start") {
    draw_set_color(global.text_color);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_set_font(fnt_menu);
    draw_text(b_xcenter,b_ycenter-margin,text);
    draw_text(b_xcenter,b_ycenter,global.voter_amount);
    
    /*if (!invalid_name) then draw_text(b_xcenter,b_top+margin*1,text);
    draw_set_halign(fa_left);
    if (!invalid_name) {
        if (blink) then draw_text(b_xcenter-50,b_top+margin*2,keyboard_string+"|")
        if (!blink) then draw_text(b_xcenter-50,b_top+margin*2,keyboard_string)
    }*/
    //draw_set_halign(fa_center);
    
    /*//number
    if (keyboard_string!="") &amp;&amp; (keyboard_check_released(vk_enter)) &amp;&amp; (!invalid_name)
    {
            number = real(keyboard_string);
            if (number &gt; 10) {
                invalid_name = true;
                invalid_text = "Too many voters!#(Max 10)";
                keyboard_string = "";
            } else {*/
                if (next_step) {
                scr_reset_vote_points();
                state = "voters";
                global.profilex = b_xcenter;
                global.profiley = b_ycenter-margin*2
                next_step = false;
                global.vote_points = global.max_points_round_1;
                global.max_vote_points = global.vote_points;
                instance_destroy(obj_number_button);
                instance_create(0,0,obj_show_vote_profiles);
                }
            //}
    //}
    
    if (invalid_name) {
        draw_text(b_xcenter,b_top+margin*2,invalid_text);
    }
    
    draw_set_halign(fa_left);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw voters
if (state == "voters") {
    draw_set_color(global.text_color);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_set_font(fnt_menu);
    
    if (global.voter &gt; global.voter_amount) {
        global.voter = 1;
        state = "round1";
        instance_create(x,y,obj_show_vote_list);
    }
    
    text = "Select voter " + string(global.voter);
    draw_text(b_xcenter,margin,text);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw round 1
if (state == "round1") {
    draw_set_color(global.text_color);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_set_font(fnt_menu);
    if (global.vote_points &gt; 0) {
        text = "What does " + global.voter_name[global.voter] + " vote with " +
        string(global.vote_points) + " points?";
    } else {
        text = "Finished?";
    }
    
    draw_text(b_xcenter,margin,text);
    
    if (global.vote_points &lt; 0) {
        global.voter += 1;
        global.vote_points = global.max_points_round_1;
        instance_destroy(obj_show_vote_list);
        instance_destroy(obj_vote_item);
        //if all voters have not yet voted create new list
        if (global.voter &lt;= global.voter_amount) {
            instance_create(x,y,obj_show_vote_list);
        } else {
            global.voter = 1;
            global.vote_points = global.max_points_round_2;
            global.max_vote_points = global.vote_points;
            instance_create(x,y,obj_show_vote_results);
            instance_create(room_width/2,40,obj_results_next_step);
            state = "results1";
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw round 2
if (state == "round2") {
    draw_set_color(global.text_color);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_set_font(fnt_menu);
    
    text = "What does " + global.voter_name[global.voter] + " vote with " +
    string(global.vote_points) + " points?";
    
    draw_text(b_xcenter,margin,text);
    
    if (global.vote_points &lt; 0) {
        global.voter += 1;
        global.vote_points = global.max_points_round_2;
        instance_destroy(obj_show_vote_list);
        instance_destroy(obj_vote_item);
        //if all voters have not yet voted create new list
        if (global.voter &lt;= global.voter_amount) {
            instance_create(x,y,obj_show_vote_list);
        } else {
            global.voter = 1;
            instance_create(x,y,obj_show_vote_results);
            instance_create(room_width/2,40,obj_vote_finish);
            state = "results2";
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
